

phoneme @
  vwl  starttype #@  endtype #@
  unstressed
  length 160
  FMT(vowel/@)
endphoneme


phoneme i
  vwl  starttype #i  endtype #i
  length 160
  FMT(vowel/i)
endphoneme


phoneme y
  vwl  starttype #i  endtype #i
  length 160
  FMT(vowel/yy_4)
endphoneme


phoneme e
  vwl  starttype #e  endtype #e
  length 180
  FMT(vowel/e_mid)
endphoneme


phoneme a
  vwl  starttype #a  endtype #a
  length 200
  FMT(vowel/aa)
endphoneme


phoneme o
  vwl  starttype #o  endtype #o
  length 180
  FMT(vowel/o)
endphoneme


phoneme u
  vwl  starttype #u  endtype #u
  length 180
  FMT(vowel/u_bck)
endphoneme


phoneme W
  vwl starttype #@ endtype #@
  length 180
  FMT(vowel/oe)
endphoneme


phoneme aI
  vwl  starttype #a  endtype #i
  length 240
  FMT(vdiph/ai)
endphoneme


phoneme eI
  vwl  starttype #e  endtype #i
  length 240
  FMT(vdiph/eei)
endphoneme


phoneme i@
  vwl  starttype #i  endtype #@
  length 240
  FMT(vdiph2/i@)
endphoneme


phoneme p#   // more aspiration
  import_phoneme consonants/ph
endphoneme


phoneme t#
  import_phoneme base1/t
endphoneme


phoneme ts#
  import_phoneme consonants/ts
endphoneme


phoneme k#
  import_phoneme consonants/kh
//  import_phoneme base1/k
endphoneme


phoneme dz
  import_phoneme consonants/dz
  voicingswitch ts
endphoneme


phoneme p
  import_phoneme consonants/p-
endphoneme


phoneme t
  import_phoneme base1/t[
endphoneme


phoneme ts
  vls alv afr sib
  lengthmod 2
  Vowelin f1=0  f2=1700 -300 300  f3=-100 80
  Vowelout f1=0 f2=1700 -300 250  f3=-100 80  rms=20
  WAV(ustop/ts2)
endphoneme


phoneme tS
  vls pla afr sib
  voicingswitch dZ
  lengthmod 2
  Vowelin f1=0  f2=2300 200 400  f3=-100 80

  IF nextPh(isPause2) THEN
    WAV(ustop/tsh_unasp, 60)
  ENDIF
  WAV(ustop/tsh_unasp)
endphoneme

phoneme tS#
  import_phoneme base1/tS
endphoneme

phoneme k
  import_phoneme consonants/k-
endphoneme


phoneme Q
  import_phoneme base1/Q"
endphoneme


