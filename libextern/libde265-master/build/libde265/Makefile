# CMAKE generated file: DO NOT EDIT!
# Generated by "MSYS Makefiles" Generator, CMake Version 3.18

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /C/msys64/mingw64/bin/cmake.exe

# The command to remove a file.
RM = /C/msys64/mingw64/bin/cmake.exe -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /C/developpement/git_gcc/Regards/libextern/libde265-master

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /C/developpement/git_gcc/Regards/libextern/libde265-master/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/C/msys64/mingw64/bin/cmake.exe --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/C/msys64/mingw64/bin/cmake-gui.exe -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(CMAKE_COMMAND) -E cmake_progress_start /C/developpement/git_gcc/Regards/libextern/libde265-master/build/CMakeFiles /C/developpement/git_gcc/Regards/libextern/libde265-master/build/libde265//CMakeFiles/progress.marks
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libde265/all
	$(CMAKE_COMMAND) -E cmake_progress_start /C/developpement/git_gcc/Regards/libextern/libde265-master/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libde265/clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libde265/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libde265/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
libde265/CMakeFiles/libde265.dir/rule:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 libde265/CMakeFiles/libde265.dir/rule
.PHONY : libde265/CMakeFiles/libde265.dir/rule

# Convenience name for target.
libde265: libde265/CMakeFiles/libde265.dir/rule

.PHONY : libde265

# fast build rule for target.
libde265/fast:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/build
.PHONY : libde265/fast

alloc_pool.obj: alloc_pool.cc.obj

.PHONY : alloc_pool.obj

# target to build an object file
alloc_pool.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/alloc_pool.cc.obj
.PHONY : alloc_pool.cc.obj

alloc_pool.i: alloc_pool.cc.i

.PHONY : alloc_pool.i

# target to preprocess a source file
alloc_pool.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/alloc_pool.cc.i
.PHONY : alloc_pool.cc.i

alloc_pool.s: alloc_pool.cc.s

.PHONY : alloc_pool.s

# target to generate assembly for a file
alloc_pool.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/alloc_pool.cc.s
.PHONY : alloc_pool.cc.s

bitstream.obj: bitstream.cc.obj

.PHONY : bitstream.obj

# target to build an object file
bitstream.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/bitstream.cc.obj
.PHONY : bitstream.cc.obj

bitstream.i: bitstream.cc.i

.PHONY : bitstream.i

# target to preprocess a source file
bitstream.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/bitstream.cc.i
.PHONY : bitstream.cc.i

bitstream.s: bitstream.cc.s

.PHONY : bitstream.s

# target to generate assembly for a file
bitstream.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/bitstream.cc.s
.PHONY : bitstream.cc.s

cabac.obj: cabac.cc.obj

.PHONY : cabac.obj

# target to build an object file
cabac.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/cabac.cc.obj
.PHONY : cabac.cc.obj

cabac.i: cabac.cc.i

.PHONY : cabac.i

# target to preprocess a source file
cabac.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/cabac.cc.i
.PHONY : cabac.cc.i

cabac.s: cabac.cc.s

.PHONY : cabac.s

# target to generate assembly for a file
cabac.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/cabac.cc.s
.PHONY : cabac.cc.s

configparam.obj: configparam.cc.obj

.PHONY : configparam.obj

# target to build an object file
configparam.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/configparam.cc.obj
.PHONY : configparam.cc.obj

configparam.i: configparam.cc.i

.PHONY : configparam.i

# target to preprocess a source file
configparam.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/configparam.cc.i
.PHONY : configparam.cc.i

configparam.s: configparam.cc.s

.PHONY : configparam.s

# target to generate assembly for a file
configparam.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/configparam.cc.s
.PHONY : configparam.cc.s

contextmodel.obj: contextmodel.cc.obj

.PHONY : contextmodel.obj

# target to build an object file
contextmodel.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/contextmodel.cc.obj
.PHONY : contextmodel.cc.obj

contextmodel.i: contextmodel.cc.i

.PHONY : contextmodel.i

# target to preprocess a source file
contextmodel.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/contextmodel.cc.i
.PHONY : contextmodel.cc.i

contextmodel.s: contextmodel.cc.s

.PHONY : contextmodel.s

# target to generate assembly for a file
contextmodel.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/contextmodel.cc.s
.PHONY : contextmodel.cc.s

de265.obj: de265.cc.obj

.PHONY : de265.obj

# target to build an object file
de265.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/de265.cc.obj
.PHONY : de265.cc.obj

de265.i: de265.cc.i

.PHONY : de265.i

# target to preprocess a source file
de265.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/de265.cc.i
.PHONY : de265.cc.i

de265.s: de265.cc.s

.PHONY : de265.s

# target to generate assembly for a file
de265.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/de265.cc.s
.PHONY : de265.cc.s

deblock.obj: deblock.cc.obj

.PHONY : deblock.obj

# target to build an object file
deblock.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/deblock.cc.obj
.PHONY : deblock.cc.obj

deblock.i: deblock.cc.i

.PHONY : deblock.i

# target to preprocess a source file
deblock.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/deblock.cc.i
.PHONY : deblock.cc.i

deblock.s: deblock.cc.s

.PHONY : deblock.s

# target to generate assembly for a file
deblock.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/deblock.cc.s
.PHONY : deblock.cc.s

decctx.obj: decctx.cc.obj

.PHONY : decctx.obj

# target to build an object file
decctx.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/decctx.cc.obj
.PHONY : decctx.cc.obj

decctx.i: decctx.cc.i

.PHONY : decctx.i

# target to preprocess a source file
decctx.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/decctx.cc.i
.PHONY : decctx.cc.i

decctx.s: decctx.cc.s

.PHONY : decctx.s

# target to generate assembly for a file
decctx.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/decctx.cc.s
.PHONY : decctx.cc.s

dpb.obj: dpb.cc.obj

.PHONY : dpb.obj

# target to build an object file
dpb.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/dpb.cc.obj
.PHONY : dpb.cc.obj

dpb.i: dpb.cc.i

.PHONY : dpb.i

# target to preprocess a source file
dpb.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/dpb.cc.i
.PHONY : dpb.cc.i

dpb.s: dpb.cc.s

.PHONY : dpb.s

# target to generate assembly for a file
dpb.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/dpb.cc.s
.PHONY : dpb.cc.s

en265.obj: en265.cc.obj

.PHONY : en265.obj

# target to build an object file
en265.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/en265.cc.obj
.PHONY : en265.cc.obj

en265.i: en265.cc.i

.PHONY : en265.i

# target to preprocess a source file
en265.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/en265.cc.i
.PHONY : en265.cc.i

en265.s: en265.cc.s

.PHONY : en265.s

# target to generate assembly for a file
en265.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/en265.cc.s
.PHONY : en265.cc.s

fallback-dct.obj: fallback-dct.cc.obj

.PHONY : fallback-dct.obj

# target to build an object file
fallback-dct.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-dct.cc.obj
.PHONY : fallback-dct.cc.obj

fallback-dct.i: fallback-dct.cc.i

.PHONY : fallback-dct.i

# target to preprocess a source file
fallback-dct.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-dct.cc.i
.PHONY : fallback-dct.cc.i

fallback-dct.s: fallback-dct.cc.s

.PHONY : fallback-dct.s

# target to generate assembly for a file
fallback-dct.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-dct.cc.s
.PHONY : fallback-dct.cc.s

fallback-motion.obj: fallback-motion.cc.obj

.PHONY : fallback-motion.obj

# target to build an object file
fallback-motion.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-motion.cc.obj
.PHONY : fallback-motion.cc.obj

fallback-motion.i: fallback-motion.cc.i

.PHONY : fallback-motion.i

# target to preprocess a source file
fallback-motion.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-motion.cc.i
.PHONY : fallback-motion.cc.i

fallback-motion.s: fallback-motion.cc.s

.PHONY : fallback-motion.s

# target to generate assembly for a file
fallback-motion.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback-motion.cc.s
.PHONY : fallback-motion.cc.s

fallback.obj: fallback.cc.obj

.PHONY : fallback.obj

# target to build an object file
fallback.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback.cc.obj
.PHONY : fallback.cc.obj

fallback.i: fallback.cc.i

.PHONY : fallback.i

# target to preprocess a source file
fallback.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback.cc.i
.PHONY : fallback.cc.i

fallback.s: fallback.cc.s

.PHONY : fallback.s

# target to generate assembly for a file
fallback.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/fallback.cc.s
.PHONY : fallback.cc.s

image-io.obj: image-io.cc.obj

.PHONY : image-io.obj

# target to build an object file
image-io.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image-io.cc.obj
.PHONY : image-io.cc.obj

image-io.i: image-io.cc.i

.PHONY : image-io.i

# target to preprocess a source file
image-io.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image-io.cc.i
.PHONY : image-io.cc.i

image-io.s: image-io.cc.s

.PHONY : image-io.s

# target to generate assembly for a file
image-io.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image-io.cc.s
.PHONY : image-io.cc.s

image.obj: image.cc.obj

.PHONY : image.obj

# target to build an object file
image.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image.cc.obj
.PHONY : image.cc.obj

image.i: image.cc.i

.PHONY : image.i

# target to preprocess a source file
image.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image.cc.i
.PHONY : image.cc.i

image.s: image.cc.s

.PHONY : image.s

# target to generate assembly for a file
image.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/image.cc.s
.PHONY : image.cc.s

intrapred.obj: intrapred.cc.obj

.PHONY : intrapred.obj

# target to build an object file
intrapred.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/intrapred.cc.obj
.PHONY : intrapred.cc.obj

intrapred.i: intrapred.cc.i

.PHONY : intrapred.i

# target to preprocess a source file
intrapred.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/intrapred.cc.i
.PHONY : intrapred.cc.i

intrapred.s: intrapred.cc.s

.PHONY : intrapred.s

# target to generate assembly for a file
intrapred.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/intrapred.cc.s
.PHONY : intrapred.cc.s

md5.obj: md5.cc.obj

.PHONY : md5.obj

# target to build an object file
md5.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/md5.cc.obj
.PHONY : md5.cc.obj

md5.i: md5.cc.i

.PHONY : md5.i

# target to preprocess a source file
md5.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/md5.cc.i
.PHONY : md5.cc.i

md5.s: md5.cc.s

.PHONY : md5.s

# target to generate assembly for a file
md5.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/md5.cc.s
.PHONY : md5.cc.s

motion.obj: motion.cc.obj

.PHONY : motion.obj

# target to build an object file
motion.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/motion.cc.obj
.PHONY : motion.cc.obj

motion.i: motion.cc.i

.PHONY : motion.i

# target to preprocess a source file
motion.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/motion.cc.i
.PHONY : motion.cc.i

motion.s: motion.cc.s

.PHONY : motion.s

# target to generate assembly for a file
motion.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/motion.cc.s
.PHONY : motion.cc.s

nal-parser.obj: nal-parser.cc.obj

.PHONY : nal-parser.obj

# target to build an object file
nal-parser.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal-parser.cc.obj
.PHONY : nal-parser.cc.obj

nal-parser.i: nal-parser.cc.i

.PHONY : nal-parser.i

# target to preprocess a source file
nal-parser.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal-parser.cc.i
.PHONY : nal-parser.cc.i

nal-parser.s: nal-parser.cc.s

.PHONY : nal-parser.s

# target to generate assembly for a file
nal-parser.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal-parser.cc.s
.PHONY : nal-parser.cc.s

nal.obj: nal.cc.obj

.PHONY : nal.obj

# target to build an object file
nal.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal.cc.obj
.PHONY : nal.cc.obj

nal.i: nal.cc.i

.PHONY : nal.i

# target to preprocess a source file
nal.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal.cc.i
.PHONY : nal.cc.i

nal.s: nal.cc.s

.PHONY : nal.s

# target to generate assembly for a file
nal.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/nal.cc.s
.PHONY : nal.cc.s

pps.obj: pps.cc.obj

.PHONY : pps.obj

# target to build an object file
pps.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/pps.cc.obj
.PHONY : pps.cc.obj

pps.i: pps.cc.i

.PHONY : pps.i

# target to preprocess a source file
pps.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/pps.cc.i
.PHONY : pps.cc.i

pps.s: pps.cc.s

.PHONY : pps.s

# target to generate assembly for a file
pps.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/pps.cc.s
.PHONY : pps.cc.s

quality.obj: quality.cc.obj

.PHONY : quality.obj

# target to build an object file
quality.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/quality.cc.obj
.PHONY : quality.cc.obj

quality.i: quality.cc.i

.PHONY : quality.i

# target to preprocess a source file
quality.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/quality.cc.i
.PHONY : quality.cc.i

quality.s: quality.cc.s

.PHONY : quality.s

# target to generate assembly for a file
quality.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/quality.cc.s
.PHONY : quality.cc.s

refpic.obj: refpic.cc.obj

.PHONY : refpic.obj

# target to build an object file
refpic.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/refpic.cc.obj
.PHONY : refpic.cc.obj

refpic.i: refpic.cc.i

.PHONY : refpic.i

# target to preprocess a source file
refpic.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/refpic.cc.i
.PHONY : refpic.cc.i

refpic.s: refpic.cc.s

.PHONY : refpic.s

# target to generate assembly for a file
refpic.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/refpic.cc.s
.PHONY : refpic.cc.s

sao.obj: sao.cc.obj

.PHONY : sao.obj

# target to build an object file
sao.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sao.cc.obj
.PHONY : sao.cc.obj

sao.i: sao.cc.i

.PHONY : sao.i

# target to preprocess a source file
sao.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sao.cc.i
.PHONY : sao.cc.i

sao.s: sao.cc.s

.PHONY : sao.s

# target to generate assembly for a file
sao.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sao.cc.s
.PHONY : sao.cc.s

scan.obj: scan.cc.obj

.PHONY : scan.obj

# target to build an object file
scan.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/scan.cc.obj
.PHONY : scan.cc.obj

scan.i: scan.cc.i

.PHONY : scan.i

# target to preprocess a source file
scan.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/scan.cc.i
.PHONY : scan.cc.i

scan.s: scan.cc.s

.PHONY : scan.s

# target to generate assembly for a file
scan.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/scan.cc.s
.PHONY : scan.cc.s

sei.obj: sei.cc.obj

.PHONY : sei.obj

# target to build an object file
sei.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sei.cc.obj
.PHONY : sei.cc.obj

sei.i: sei.cc.i

.PHONY : sei.i

# target to preprocess a source file
sei.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sei.cc.i
.PHONY : sei.cc.i

sei.s: sei.cc.s

.PHONY : sei.s

# target to generate assembly for a file
sei.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sei.cc.s
.PHONY : sei.cc.s

slice.obj: slice.cc.obj

.PHONY : slice.obj

# target to build an object file
slice.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/slice.cc.obj
.PHONY : slice.cc.obj

slice.i: slice.cc.i

.PHONY : slice.i

# target to preprocess a source file
slice.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/slice.cc.i
.PHONY : slice.cc.i

slice.s: slice.cc.s

.PHONY : slice.s

# target to generate assembly for a file
slice.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/slice.cc.s
.PHONY : slice.cc.s

sps.obj: sps.cc.obj

.PHONY : sps.obj

# target to build an object file
sps.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sps.cc.obj
.PHONY : sps.cc.obj

sps.i: sps.cc.i

.PHONY : sps.i

# target to preprocess a source file
sps.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sps.cc.i
.PHONY : sps.cc.i

sps.s: sps.cc.s

.PHONY : sps.s

# target to generate assembly for a file
sps.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/sps.cc.s
.PHONY : sps.cc.s

threads.obj: threads.cc.obj

.PHONY : threads.obj

# target to build an object file
threads.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/threads.cc.obj
.PHONY : threads.cc.obj

threads.i: threads.cc.i

.PHONY : threads.i

# target to preprocess a source file
threads.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/threads.cc.i
.PHONY : threads.cc.i

threads.s: threads.cc.s

.PHONY : threads.s

# target to generate assembly for a file
threads.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/threads.cc.s
.PHONY : threads.cc.s

transform.obj: transform.cc.obj

.PHONY : transform.obj

# target to build an object file
transform.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/transform.cc.obj
.PHONY : transform.cc.obj

transform.i: transform.cc.i

.PHONY : transform.i

# target to preprocess a source file
transform.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/transform.cc.i
.PHONY : transform.cc.i

transform.s: transform.cc.s

.PHONY : transform.s

# target to generate assembly for a file
transform.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/transform.cc.s
.PHONY : transform.cc.s

util.obj: util.cc.obj

.PHONY : util.obj

# target to build an object file
util.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/util.cc.obj
.PHONY : util.cc.obj

util.i: util.cc.i

.PHONY : util.i

# target to preprocess a source file
util.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/util.cc.i
.PHONY : util.cc.i

util.s: util.cc.s

.PHONY : util.s

# target to generate assembly for a file
util.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/util.cc.s
.PHONY : util.cc.s

visualize.obj: visualize.cc.obj

.PHONY : visualize.obj

# target to build an object file
visualize.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/visualize.cc.obj
.PHONY : visualize.cc.obj

visualize.i: visualize.cc.i

.PHONY : visualize.i

# target to preprocess a source file
visualize.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/visualize.cc.i
.PHONY : visualize.cc.i

visualize.s: visualize.cc.s

.PHONY : visualize.s

# target to generate assembly for a file
visualize.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/visualize.cc.s
.PHONY : visualize.cc.s

vps.obj: vps.cc.obj

.PHONY : vps.obj

# target to build an object file
vps.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vps.cc.obj
.PHONY : vps.cc.obj

vps.i: vps.cc.i

.PHONY : vps.i

# target to preprocess a source file
vps.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vps.cc.i
.PHONY : vps.cc.i

vps.s: vps.cc.s

.PHONY : vps.s

# target to generate assembly for a file
vps.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vps.cc.s
.PHONY : vps.cc.s

vui.obj: vui.cc.obj

.PHONY : vui.obj

# target to build an object file
vui.cc.obj:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vui.cc.obj
.PHONY : vui.cc.obj

vui.i: vui.cc.i

.PHONY : vui.i

# target to preprocess a source file
vui.cc.i:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vui.cc.i
.PHONY : vui.cc.i

vui.s: vui.cc.s

.PHONY : vui.s

# target to generate assembly for a file
vui.cc.s:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(MAKE) $(MAKESILENT) -f libde265/CMakeFiles/libde265.dir/build.make libde265/CMakeFiles/libde265.dir/vui.cc.s
.PHONY : vui.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... libde265"
	@echo "... alloc_pool.obj"
	@echo "... alloc_pool.i"
	@echo "... alloc_pool.s"
	@echo "... bitstream.obj"
	@echo "... bitstream.i"
	@echo "... bitstream.s"
	@echo "... cabac.obj"
	@echo "... cabac.i"
	@echo "... cabac.s"
	@echo "... configparam.obj"
	@echo "... configparam.i"
	@echo "... configparam.s"
	@echo "... contextmodel.obj"
	@echo "... contextmodel.i"
	@echo "... contextmodel.s"
	@echo "... de265.obj"
	@echo "... de265.i"
	@echo "... de265.s"
	@echo "... deblock.obj"
	@echo "... deblock.i"
	@echo "... deblock.s"
	@echo "... decctx.obj"
	@echo "... decctx.i"
	@echo "... decctx.s"
	@echo "... dpb.obj"
	@echo "... dpb.i"
	@echo "... dpb.s"
	@echo "... en265.obj"
	@echo "... en265.i"
	@echo "... en265.s"
	@echo "... fallback-dct.obj"
	@echo "... fallback-dct.i"
	@echo "... fallback-dct.s"
	@echo "... fallback-motion.obj"
	@echo "... fallback-motion.i"
	@echo "... fallback-motion.s"
	@echo "... fallback.obj"
	@echo "... fallback.i"
	@echo "... fallback.s"
	@echo "... image-io.obj"
	@echo "... image-io.i"
	@echo "... image-io.s"
	@echo "... image.obj"
	@echo "... image.i"
	@echo "... image.s"
	@echo "... intrapred.obj"
	@echo "... intrapred.i"
	@echo "... intrapred.s"
	@echo "... md5.obj"
	@echo "... md5.i"
	@echo "... md5.s"
	@echo "... motion.obj"
	@echo "... motion.i"
	@echo "... motion.s"
	@echo "... nal-parser.obj"
	@echo "... nal-parser.i"
	@echo "... nal-parser.s"
	@echo "... nal.obj"
	@echo "... nal.i"
	@echo "... nal.s"
	@echo "... pps.obj"
	@echo "... pps.i"
	@echo "... pps.s"
	@echo "... quality.obj"
	@echo "... quality.i"
	@echo "... quality.s"
	@echo "... refpic.obj"
	@echo "... refpic.i"
	@echo "... refpic.s"
	@echo "... sao.obj"
	@echo "... sao.i"
	@echo "... sao.s"
	@echo "... scan.obj"
	@echo "... scan.i"
	@echo "... scan.s"
	@echo "... sei.obj"
	@echo "... sei.i"
	@echo "... sei.s"
	@echo "... slice.obj"
	@echo "... slice.i"
	@echo "... slice.s"
	@echo "... sps.obj"
	@echo "... sps.i"
	@echo "... sps.s"
	@echo "... threads.obj"
	@echo "... threads.i"
	@echo "... threads.s"
	@echo "... transform.obj"
	@echo "... transform.i"
	@echo "... transform.s"
	@echo "... util.obj"
	@echo "... util.i"
	@echo "... util.s"
	@echo "... visualize.obj"
	@echo "... visualize.i"
	@echo "... visualize.s"
	@echo "... vps.obj"
	@echo "... vps.i"
	@echo "... vps.s"
	@echo "... vui.obj"
	@echo "... vui.i"
	@echo "... vui.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /C/developpement/git_gcc/Regards/libextern/libde265-master/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

