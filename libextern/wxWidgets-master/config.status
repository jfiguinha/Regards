#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by wxWidgets $as_me 3.1.3, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" lib/wx/config/osx_cocoa-unicode-static-3.1:wx-config.in lib/wx/config/inplace-osx_cocoa-unicode-static-3.1:wx-config-inplace.in utils/ifacecheck/rungccxml.sh Makefile samples/xrc/Makefile samples/wrapsizer/Makefile samples/wizard/Makefile samples/widgets/Makefile samples/webview/Makefile samples/vscroll/Makefile samples/validate/Makefile samples/uiaction/Makefile samples/typetest/Makefile samples/treelist/Makefile samples/treectrl/Makefile samples/toolbar/Makefile samples/thread/Makefile samples/text/Makefile samples/taskbar/Makefile samples/taborder/Makefile samples/svg/Makefile samples/stc/Makefile samples/statbar/Makefile samples/splitter/Makefile samples/splash/Makefile samples/sound/Makefile samples/sockets/Makefile samples/shaped/Makefile samples/secretstore/Makefile samples/scroll/Makefile samples/sashtest/Makefile samples/richtext/Makefile samples/ribbon/Makefile samples/render/Makefile samples/propgrid/Makefile samples/printing/Makefile samples/preferences/Makefile samples/power/Makefile samples/popup/Makefile samples/opengl/pyramid/Makefile samples/opengl/penguin/Makefile samples/opengl/isosurf/Makefile samples/opengl/cube/Makefile samples/opengl/Makefile samples/notebook/Makefile samples/minimal/Makefile samples/menu/Makefile samples/mediaplayer/Makefile samples/mdi/Makefile samples/listctrl/Makefile samples/layout/Makefile samples/joytest/Makefile samples/ipc/Makefile samples/internat/Makefile samples/image/Makefile samples/html/zip/Makefile samples/html/widget/Makefile samples/html/virtual/Makefile samples/html/test/Makefile samples/html/printing/Makefile samples/html/htmlctrl/Makefile samples/html/helpview/Makefile samples/html/help/Makefile samples/html/about/Makefile samples/html/Makefile samples/htlbox/Makefile samples/help/Makefile samples/grid/Makefile samples/fswatcher/Makefile samples/font/Makefile samples/exec/Makefile samples/except/Makefile samples/event/Makefile samples/erase/Makefile samples/drawing/Makefile samples/dragimag/Makefile samples/docview/Makefile samples/dnd/Makefile samples/display/Makefile samples/dialogs/Makefile samples/debugrpt/Makefile samples/dataview/Makefile samples/config/Makefile samples/combo/Makefile samples/collpane/Makefile samples/clipboard/Makefile samples/caret/Makefile samples/calendar/Makefile samples/aui/Makefile samples/artprov/Makefile samples/archive/Makefile samples/animate/Makefile samples/Makefile demos/forty/Makefile demos/fractal/Makefile demos/life/Makefile demos/Makefile demos/bombs/Makefile demos/poem/Makefile utils/wxrc/Makefile utils/execmon/Makefile utils/helpview/Makefile utils/helpview/src/Makefile utils/ifacecheck/src/Makefile utils/hhp2cached/Makefile utils/screenshotgen/Makefile utils/screenshotgen/src/Makefile utils/Makefile utils/emulator/Makefile utils/emulator/src/Makefile tests/benchmarks/Makefile tests/Makefile"
config_headers=" lib/wx/include/osx_cocoa-unicode-static-3.1/wx/setup.h:setup.h.in"
config_commands=" wx-config"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <wx-dev@googlegroups.com>."

ac_cs_config="'--with-libjpeg=builtin' '--with-libpng=builtin' '--with-libtiff=builtin' '--enable-monolithic' '--enable-unicode' '--disable-shared' '--disable-log' '--disable-debug' --disable-webp --disable-zstd --disable-lzma --disable-jbig"
ac_cs_version="\
wxWidgets config.status 3.1.3
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/Users/jacques/developpement/git/Regards/libextern/wxWidgets-master'
srcdir='.'
INSTALL='/usr/bin/install -c'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh './configure'  '--with-libjpeg=builtin' '--with-libpng=builtin' '--with-libtiff=builtin' '--enable-monolithic' '--enable-unicode' '--disable-shared' '--disable-log' '--disable-debug' --disable-webp --disable-zstd --disable-lzma --disable-jbig $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#

            CPP="gcc -E -mmacosx-version-min=10.9"
            infile="./include/wx/msw/genrcdefs.h"
            outdir="lib/wx/include/osx_cocoa-unicode-static-3.1/wx/msw"


 TOOLCHAIN_FULLNAME="osx_cocoa-unicode-static-3.1"
 TOOLCHAIN_FULLNAME="osx_cocoa-unicode-static-3.1"
 TOOLCHAIN_FULLNAME="osx_cocoa-unicode-static-3.1"
                     LN_S="ln -s"



# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "lib/wx/include/${TOOLCHAIN_FULLNAME}/wx/setup.h") CONFIG_HEADERS="$CONFIG_HEADERS lib/wx/include/${TOOLCHAIN_FULLNAME}/wx/setup.h:setup.h.in" ;;
    "rcdefs.h") CONFIG_COMMANDS="$CONFIG_COMMANDS rcdefs.h" ;;
    "lib/wx/config/${TOOLCHAIN_FULLNAME}") CONFIG_FILES="$CONFIG_FILES lib/wx/config/${TOOLCHAIN_FULLNAME}:wx-config.in" ;;
    "lib/wx/config/inplace-${TOOLCHAIN_FULLNAME}") CONFIG_FILES="$CONFIG_FILES lib/wx/config/inplace-${TOOLCHAIN_FULLNAME}:wx-config-inplace.in" ;;
    "utils/ifacecheck/rungccxml.sh") CONFIG_FILES="$CONFIG_FILES utils/ifacecheck/rungccxml.sh" ;;
    "version-script") CONFIG_FILES="$CONFIG_FILES version-script" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "wx-config") CONFIG_COMMANDS="$CONFIG_COMMANDS wx-config" ;;
    "$mk") CONFIG_FILES="$CONFIG_FILES $mk" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["RESCOMP"]=""
S["DLLTOOL"]=""
S["GCC"]="yes"
S["WX_VERSION_TAG"]="WXU_3.1"
S["DMALLOC_LIBS"]=""
S["OPENGL_LIBS"]="-framework OpenGL -framework AGL"
S["LDFLAGS_GL"]=""
S["SAMPLES_SUBDIRS"]="animate archive artprov aui calendar caret clipboard collpane combo config dataview debugrpt dialogs display dnd docview dragimag drawing erase even"\
"t except exec font fswatcher grid help htlbox html html/about html/help html/helpview html/htmlctrl html/printing html/test html/virtual html/widget"\
" html/zip image internat ipc joytest layout listctrl mdi mediaplayer menu minimal notebook opengl opengl/cube opengl/isosurf opengl/penguin opengl/p"\
"yramid popup power preferences printing propgrid render ribbon richtext sashtest scroll secretstore shaped sockets sound splash splitter statbar stc"\
" svg taborder taskbar text thread toolbar treectrl treelist typetest uiaction validate vscroll webview widgets wizard wrapsizer xrc "
S["DISTDIR"]="wx$(TOOLKIT)"
S["GUIDIST"]="OSX_COCOA_DIST SAMPLES_DIST DEMOS_DIST UTILS_DIST MISC_DIST INTL_DIST"
S["WXCONFIG_RESFLAGS"]=""
S["WXCONFIG_LDFLAGS_GUI"]=""
S["WXCONFIG_LDFLAGS"]="  -framework IOKit -framework Carbon -framework Cocoa -framework AudioToolbox -framework System -framework OpenGL"
S["WXCONFIG_RPATH"]=""
S["WXCONFIG_LIBS"]="-lwxtiff-3.1 -lwxjpeg-3.1 -lwxpng-3.1 -lwxregexu-3.1 -lwxscintilla-3.1  -lz  -lexpat -lz -framework Security -lpthread -liconv"
S["WXCONFIG_CXXFLAGS"]=""
S["WXCONFIG_CFLAGS"]=""
S["WXCONFIG_CPPFLAGS"]="-D_FILE_OFFSET_BITS=64 -DwxDEBUG_LEVEL=0  -D__WXMAC__ -D__WXOSX__ -D__WXOSX_COCOA__"
S["WX_CHARTYPE"]="unicode"
S["WX_SUBVERSION"]="3.1.3.0"
S["WX_VERSION"]="3.1.3"
S["WX_RELEASE"]="3.1"
S["WIDGET_SET"]=""
S["cross_compiling"]="no"
S["TOOLCHAIN_FULLNAME"]="osx_cocoa-unicode-static-3.1"
S["TOOLCHAIN_NAME"]="osx_cocoau-3.1"
S["TOOLKIT_DIR"]="osx_cocoa"
S["TOOLKIT"]="OSX_COCOA"
S["USE_GUI"]="1"
S["WX_LIBRARY_BASENAME_GUI"]="wx_osx_cocoau"
S["WX_LIBRARY_BASENAME_NOGUI"]="wx_baseu"
S["SHARED"]="0"
S["COND_wxUSE_ZLIB_builtin"]="#"
S["COND_wxUSE_REGEX_builtin"]=""
S["COND_wxUSE_LIBTIFF_builtin"]=""
S["COND_wxUSE_LIBPNG_builtin"]=""
S["COND_wxUSE_LIBJPEG_builtin"]=""
S["COND_wxUSE_EXPAT_builtin"]="#"
S["COND_WXUNIV_1"]="#"
S["COND_WITH_PLUGIN_SDL_1"]="#"
S["COND_WINDOWS_IMPLIB_1"]="#"
S["COND_USE_XRC_1"]=""
S["COND_USE_WEBVIEW_WEBKIT2_1"]="#"
S["COND_USE_THREADS_1"]="#"
S["COND_USE_THREADS_0"]="#"
S["COND_USE_STC_1"]=""
S["COND_USE_SOVERSOLARIS_1"]="#"
S["COND_USE_SOVERSION_1_USE_SOVERSOLARIS_1"]="#"
S["COND_USE_SOVERSION_0"]="#"
S["COND_USE_SOVERLINUX_1"]="#"
S["COND_USE_SOVERCYGWIN_1_USE_SOVERSION_1"]="#"
S["COND_USE_SOTWOSYMLINKS_1"]=""
S["COND_USE_RTTI_1"]="#"
S["COND_USE_RTTI_0"]="#"
S["COND_USE_PLUGINS_0"]=""
S["COND_USE_PCH_1"]="#"
S["COND_USE_OPENGL_1"]=""
S["COND_USE_GUI_1_wxUSE_LIBTIFF_builtin"]=""
S["COND_USE_GUI_1_wxUSE_LIBPNG_builtin"]=""
S["COND_USE_GUI_1_wxUSE_LIBJPEG_builtin"]=""
S["COND_USE_GUI_1_WXUNIV_1"]="#"
S["COND_USE_GUI_1_WXUNIV_0"]=""
S["COND_USE_GUI_1_USE_OPENGL_1"]=""
S["COND_USE_GUI_1"]=""
S["COND_USE_GUI_0"]="#"
S["COND_USE_EXCEPTIONS_1"]="#"
S["COND_USE_EXCEPTIONS_0"]="#"
S["COND_USE_CAIRO_1"]="#"
S["COND_UNICODE_1"]=""
S["COND_TOOLKIT_X11_USE_GUI_1_WXUNIV_1"]="#"
S["COND_TOOLKIT_X11_USE_GUI_1"]="#"
S["COND_TOOLKIT_X11"]="#"
S["COND_TOOLKIT_QT_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_QT"]="#"
S["COND_TOOLKIT_OSX_IPHONE_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_OSX_IPHONE_USE_GUI_1"]="#"
S["COND_TOOLKIT_OSX_IPHONE"]="#"
S["COND_TOOLKIT_OSX_COCOA_WXUNIV_0"]=""
S["COND_TOOLKIT_OSX_COCOA_USE_GUI_1_WXUNIV_0"]=""
S["COND_TOOLKIT_OSX_COCOA_USE_GUI_1"]=""
S["COND_TOOLKIT_OSX_COCOA"]=""
S["COND_TOOLKIT_OSX_CARBON"]="#"
S["COND_TOOLKIT_MSW_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_MSW_USE_GUI_1"]="#"
S["COND_TOOLKIT_MSW"]="#"
S["COND_TOOLKIT_MOTIF_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_MOTIF_USE_GUI_1"]="#"
S["COND_TOOLKIT_MOTIF"]="#"
S["COND_TOOLKIT_MAC"]="#"
S["COND_TOOLKIT_GTK_USE_GUI_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION__USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION__USE_GUI_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_4_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_4_USE_GUI_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_4"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_3_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_3_USE_GUI_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_3"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1_WXUNIV_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1_WXUNIV_0"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_2"]="#"
S["COND_TOOLKIT_GTK_TOOLKIT_VERSION_"]="#"
S["COND_TOOLKIT_GTK"]="#"
S["COND_TOOLKIT_DFB_USE_GUI_1"]="#"
S["COND_TOOLKIT_DFB"]="#"
S["COND_TOOLKIT_COCOA"]="#"
S["COND_TOOLKIT_"]="#"
S["COND_SHARED_1_USE_GUI_1_USE_OPENGL_1"]="#"
S["COND_SHARED_1_USE_GUI_1"]="#"
S["COND_SHARED_1"]="#"
S["COND_SHARED_0_wxUSE_ZLIB_builtin"]="#"
S["COND_SHARED_0_wxUSE_REGEX_builtin"]=""
S["COND_SHARED_0_wxUSE_EXPAT_builtin"]="#"
S["COND_SHARED_0_USE_STC_1"]=""
S["COND_SHARED_0_USE_GUI_1_wxUSE_LIBTIFF_builtin"]=""
S["COND_SHARED_0_USE_GUI_1_wxUSE_LIBPNG_builtin"]=""
S["COND_SHARED_0_USE_GUI_1_wxUSE_LIBJPEG_builtin"]=""
S["COND_SHARED_0_USE_GUI_1_USE_OPENGL_1"]=""
S["COND_SHARED_0_TOOLKIT_MSW_WXUNIV_0"]="#"
S["COND_SHARED_0_TOOLKIT_MAC_WXUNIV_0"]="#"
S["COND_SHARED_0"]=""
S["COND_PLATFORM_WIN32_1_TOOLKIT_QT_USE_GUI_1_WXUNIV_0"]="#"
S["COND_PLATFORM_WIN32_1_TOOLKIT_GTK_TOOLKIT_VERSION_4_USE_GUI_1"]="#"
S["COND_PLATFORM_WIN32_1_TOOLKIT_GTK_TOOLKIT_VERSION_3_USE_GUI_1"]="#"
S["COND_PLATFORM_WIN32_1_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1"]="#"
S["COND_PLATFORM_WIN32_1_SHARED_0"]="#"
S["COND_PLATFORM_WIN32_1"]="#"
S["COND_PLATFORM_WIN32_0_TOOLKIT_GTK_TOOLKIT_VERSION_4"]="#"
S["COND_PLATFORM_WIN32_0_TOOLKIT_GTK_TOOLKIT_VERSION_3"]="#"
S["COND_PLATFORM_WIN32_0"]=""
S["COND_PLATFORM_UNIX_1_USE_PLUGINS_0"]="#"
S["COND_PLATFORM_UNIX_1_USE_GUI_1"]="#"
S["COND_PLATFORM_UNIX_1_TOOLKIT_GTK_TOOLKIT_VERSION_4_USE_GUI_1"]="#"
S["COND_PLATFORM_UNIX_1_TOOLKIT_GTK_TOOLKIT_VERSION_3_USE_GUI_1"]="#"
S["COND_PLATFORM_UNIX_1_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1"]="#"
S["COND_PLATFORM_UNIX_1"]="#"
S["COND_PLATFORM_UNIX_0"]=""
S["COND_PLATFORM_OS2_1"]="#"
S["COND_PLATFORM_MACOSX_1_USE_SOVERSION_1"]=""
S["COND_PLATFORM_MACOSX_1_USE_OPENGL_1"]=""
S["COND_PLATFORM_MACOSX_1_USE_GUI_1"]=""
S["COND_PLATFORM_MACOSX_1_TOOLKIT_OSX_IPHONE_USE_GUI_1_WXUNIV_0"]="#"
S["COND_PLATFORM_MACOSX_1_TOOLKIT_OSX_IPHONE_USE_GUI_1"]="#"
S["COND_PLATFORM_MACOSX_1_TOOLKIT_OSX_COCOA_USE_GUI_1_WXUNIV_0"]=""
S["COND_PLATFORM_MACOSX_1_TOOLKIT_OSX_COCOA_USE_GUI_1"]=""
S["COND_PLATFORM_MACOSX_1_TOOLKIT_GTK_TOOLKIT_VERSION_4_USE_GUI_1"]="#"
S["COND_PLATFORM_MACOSX_1_TOOLKIT_GTK_TOOLKIT_VERSION_3_USE_GUI_1"]="#"
S["COND_PLATFORM_MACOSX_1_TOOLKIT_GTK_TOOLKIT_VERSION_2_USE_GUI_1"]="#"
S["COND_PLATFORM_MACOSX_1_PLATFORM_WIN32_1_SHARED_0"]="#"
S["COND_PLATFORM_MACOSX_1"]=""
S["COND_PLATFORM_MACOSX_0_USE_SOVERSION_1"]="#"
S["COND_PLATFORM_MACOSX_0_USE_SOVERCYGWIN_0_USE_SOVERSION_1"]="#"
S["COND_OFFICIAL_BUILD_1_PLATFORM_WIN32_1"]="#"
S["COND_OFFICIAL_BUILD_0_PLATFORM_WIN32_1"]="#"
S["COND_MONOLITHIC_1_USE_STC_1"]=""
S["COND_MONOLITHIC_1_SHARED_1"]="#"
S["COND_MONOLITHIC_1_SHARED_0"]=""
S["COND_MONOLITHIC_1"]=""
S["COND_MONOLITHIC_0_USE_XRC_1"]="#"
S["COND_MONOLITHIC_0_USE_WEBVIEW_1"]="#"
S["COND_MONOLITHIC_0_USE_STC_1"]="#"
S["COND_MONOLITHIC_0_USE_RICHTEXT_1"]="#"
S["COND_MONOLITHIC_0_USE_RIBBON_1"]="#"
S["COND_MONOLITHIC_0_USE_QA_1"]="#"
S["COND_MONOLITHIC_0_USE_PROPGRID_1"]="#"
S["COND_MONOLITHIC_0_USE_MEDIA_1"]="#"
S["COND_MONOLITHIC_0_USE_HTML_1"]="#"
S["COND_MONOLITHIC_0_USE_GUI_1_USE_MEDIA_1"]="#"
S["COND_MONOLITHIC_0_USE_GUI_1"]="#"
S["COND_MONOLITHIC_0_USE_AUI_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_XRC_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_STC_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_RICHTEXT_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_RIBBON_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_PROPGRID_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_GUI_1_USE_WEBVIEW_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_GUI_1_USE_QA_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_GUI_1_USE_MEDIA_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_GUI_1_USE_HTML_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_GUI_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1_USE_AUI_1"]="#"
S["COND_MONOLITHIC_0_SHARED_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_XRC_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_STC_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_RICHTEXT_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_RIBBON_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_PROPGRID_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_GUI_1_USE_WEBVIEW_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_GUI_1_USE_QA_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_GUI_1_USE_MEDIA_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_GUI_1_USE_HTML_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_GUI_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0_USE_AUI_1"]="#"
S["COND_MONOLITHIC_0_SHARED_0"]="#"
S["COND_MONOLITHIC_0"]="#"
S["COND_ICC_PCH_1"]="#"
S["COND_GCC_PCH_1"]="#"
S["COND_DEPS_TRACKING_1"]=""
S["COND_DEPS_TRACKING_0"]="#"
S["COND_DEBUG_INFO_1"]="#"
S["COND_DEBUG_INFO_0"]=""
S["COND_DEBUG_FLAG_0"]="#"
S["COND_BUILD_release_DEBUG_INFO_default"]="#"
S["COND_BUILD_release"]="#"
S["COND_BUILD_debug_DEBUG_INFO_default"]="#"
S["COND_BUILD_debug"]="#"
S["BK_MAKE_PCH"]=""
S["ICC_PCH_USE_SWITCH"]=""
S["ICC_PCH_CREATE_SWITCH"]=""
S["ICC_PCH"]="0"
S["GCC_PCH"]="0"
S["OBJCXXFLAGS"]="-O2 -Wno-deprecated-declarations "
S["WINDRES"]=""
S["BK_DEPS"]="/Users/jacques/developpement/git/Regards/libextern/wxWidgets-master/bk-deps"
S["DEPS_TRACKING"]="1"
S["SONAME_FLAG"]=""
S["USE_SOTWOSYMLINKS"]="1"
S["USE_MACVERSION"]="1"
S["USE_SOVERCYGWIN"]="0"
S["USE_SOVERSOLARIS"]="0"
S["USE_SOVERLINUX"]="0"
S["USE_SOVERSION"]="1"
S["WINDOWS_IMPLIB"]="0"
S["PIC_FLAG"]="-dynamic -fPIC -DPIC"
S["SHARED_LD_MODULE_CXX"]="CXX=\"$(CXX)\" /Users/jacques/developpement/git/Regards/libextern/wxWidgets-master/shared-ld-sh -bundle -headerpad_max_install_names -o"
S["SHARED_LD_MODULE_CC"]="/Users/jacques/developpement/git/Regards/libextern/wxWidgets-master/shared-ld-sh -bundle -headerpad_max_install_names -o"
S["SHARED_LD_CXX"]="${CXX} -dynamiclib -single_module -headerpad_max_install_names -o"
S["SHARED_LD_CC"]="${CC} -dynamiclib -single_module -headerpad_max_install_names -o"
S["AIX_CXX_LD"]=""
S["dlldir"]="${exec_prefix}/lib"
S["DLLPREFIX_MODULE"]=""
S["DLLPREFIX"]="lib"
S["LIBEXT"]=".a"
S["LIBPREFIX"]="lib"
S["DLLIMP_SUFFIX"]="dylib"
S["SO_SUFFIX_MODULE"]="bundle"
S["SO_SUFFIX"]="dylib"
S["PLATFORM_BEOS"]="0"
S["PLATFORM_MACOSX"]="1"
S["PLATFORM_MACOS"]="0"
S["PLATFORM_MAC"]="1"
S["PLATFORM_WIN32"]="0"
S["PLATFORM_UNIX"]="0"
S["IF_GNU_MAKE"]=""
S["LDFLAGS_GUI"]=""
S["INSTALL_DIR"]="mkdir -p"
S["NM"]="nm"
S["STRIP"]="strip"
S["AROPTIONS"]="rc"
S["MAKE_SET"]=""
S["SET_MAKE"]=""
S["LN_S"]="ln -s"
S["INSTALL_DATA"]="cp -fp"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="cp -fp"
S["RANLIB"]="ranlib"
S["HOST_SUFFIX"]=""
S["HEADER_PAD_OPTION"]=""
S["SAMPLES_CXXFLAGS"]=""
S["SAMPLES_RPATH_FLAG"]=""
S["DYLIB_RPATH_POSTLINK"]=""
S["DYLIB_RPATH_INSTALL"]=""
S["TOOLKIT_VERSION"]=""
S["TOOLKIT_LOWERCASE"]="osx_cocoa"
S["DEBUG_FLAG"]=""
S["DEBUG_INFO"]="0"
S["UNICODE"]="1"
S["WITH_PLUGIN_SDL"]="0"
S["EXTRALIBS_WEBVIEW"]=""
S["EXTRALIBS_STC"]="-lwxscintilla-3.1"
S["EXTRALIBS_SDL"]=""
S["EXTRALIBS_OPENGL"]=" -framework OpenGL -framework AGL"
S["EXTRALIBS_GUI"]="-framework WebKit"
S["EXTRALIBS_MEDIA"]="-framework AVFoundation -framework CoreMedia -weak_framework AVKit"
S["EXTRALIBS_HTML"]=""
S["EXTRALIBS_XML"]=" -lexpat"
S["EXTRALIBS"]="  -framework IOKit -framework Carbon -framework Cocoa -framework AudioToolbox -framework System -framework OpenGL  -lz -framework Security -lpthread"\
" -liconv "
S["CXXWARNINGS"]="-Wall -Wundef -Wunused-parameter -Wno-ctor-dtor-privacy -Woverloaded-virtual -Wno-deprecated-declarations"
S["USE_PLUGINS"]="0"
S["MONOLITHIC"]="1"
S["WXUNIV"]="0"
S["WX_LIB_FLAVOUR"]=""
S["WX_FLAVOUR"]=""
S["OFFICIAL_BUILD"]="0"
S["VENDOR"]="custom"
S["wxUSE_LIBTIFF"]="builtin"
S["wxUSE_LIBPNG"]="builtin"
S["wxUSE_LIBJPEG"]="builtin"
S["wxUSE_EXPAT"]="sys"
S["wxUSE_REGEX"]="builtin"
S["wxUSE_ZLIB"]="sys"
S["STD_GUI_LIBS"]="xrc html qa adv core"
S["STD_BASE_LIBS"]="xml net base"
S["BUILT_WX_LIBS"]="xrc webview stc richtext ribbon propgrid aui gl html qa adv core xml net base"
S["GST_LIBS"]="-framework AVFoundation -framework CoreMedia -weak_framework AVKit"
S["GST_CFLAGS"]=""
S["CAIRO_LIBS"]=""
S["CAIRO_CFLAGS"]=""
S["WEBKIT_LIBS"]=""
S["WEBKIT_CFLAGS"]=""
S["COND_PYTHON"]=""
S["PYTHON"]="/usr/local/bin/python"
S["PRIVATE_FONTS_LIBS"]=""
S["PRIVATE_FONTS_CFLAGS"]=""
S["XTST_LIBS"]=""
S["XTST_CFLAGS"]=""
S["LIBNOTIFY_LIBS"]=""
S["LIBNOTIFY_CFLAGS"]=""
S["GNOMEVFS_LIBS"]=""
S["GNOMEVFS_CFLAGS"]=""
S["GTKPRINT_LIBS"]=""
S["GTKPRINT_CFLAGS"]=""
S["SDL_CONFIG"]=""
S["SDL_LIBS"]=""
S["SDL_CFLAGS"]=""
S["LIBSECRET_LIBS"]=""
S["LIBSECRET_CFLAGS"]=""
S["GXX_VERSION"]=""
S["LIBICONV"]="-liconv"
S["CXXFLAGS_VISIBILITY"]=""
S["CFLAGS_VISIBILITY"]=""
S["MesaGL_LIBS"]=""
S["MesaGL_CFLAGS"]=""
S["GLU_LIBS"]=""
S["GLU_CFLAGS"]=""
S["GL_LIBS"]=""
S["GL_CFLAGS"]=""
S["SM_LIBS"]=""
S["SM_CFLAGS"]=""
S["Xxf86vm_LIBS"]=""
S["Xxf86vm_CFLAGS"]=""
S["Xinerama_LIBS"]=""
S["Xinerama_CFLAGS"]=""
S["QT5_LIBS"]=""
S["QT5_CFLAGS"]=""
S["PANGOFT2_LIBS"]=""
S["PANGOFT2_CFLAGS"]=""
S["PANGOXFT_LIBS"]=""
S["PANGOXFT_CFLAGS"]=""
S["X_EXTRA_LIBS"]=""
S["X_LIBS"]=""
S["X_PRE_LIBS"]=""
S["X_CFLAGS"]=""
S["XMKMF"]=""
S["DIRECTFB_LIBS"]=""
S["DIRECTFB_CFLAGS"]=""
S["GTK_CONFIG"]=""
S["GTK_LIBS"]=""
S["GTK_CFLAGS"]=""
S["wxCFLAGS_C99"]=""
S["subdirs"]=" src/tiff"
S["LIBTIFF_LIBS"]=""
S["LIBTIFF_CFLAGS"]=""
S["PKG_CONFIG"]="/usr/local/bin/pkg-config"
S["AR"]="ar"
S["HAVE_CXX17"]=""
S["HAVE_CXX14"]=""
S["HAVE_CXX11"]=""
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-O2 -fno-common "
S["CXX"]="g++ -mmacosx-version-min=10.9"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E -mmacosx-version-min=10.9"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]="-D_FILE_OFFSET_BITS=64 -DwxDEBUG_LEVEL=0 -I${wx_top_builddir}/lib/wx/include/osx_cocoa-unicode-static-3.1 -I${top_srcdir}/include"
S["LDFLAGS"]="  -framework IOKit -framework Carbon -framework Cocoa -framework AudioToolbox -framework System -framework OpenGL "
S["CFLAGS"]="-Wall -Wundef -O2 -fno-common "
S["CC"]="gcc -mmacosx-version-min=10.9"
S["wx_top_builddir"]="/Users/jacques/developpement/git/Regards/libextern/wxWidgets-master"
S["host_os"]="darwin19.0.0"
S["host_vendor"]="apple"
S["host_cpu"]="x86_64"
S["host"]="x86_64-apple-darwin19.0.0"
S["build_os"]="darwin19.0.0"
S["build_vendor"]="apple"
S["build_cpu"]="x86_64"
S["build"]="x86_64-apple-darwin19.0.0"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-lz -framework Security -lpthread -liconv"
S["ECHO_T"]=""
S["ECHO_N"]=""
S["ECHO_C"]="\\c"
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["runstatedir"]="${localstatedir}/run"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="wx-dev@googlegroups.com"
S["PACKAGE_STRING"]="wxWidgets 3.1.3"
S["PACKAGE_VERSION"]="3.1.3"
S["PACKAGE_TARNAME"]="wxwidgets"
S["PACKAGE_NAME"]="wxWidgets"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"wxWidgets\""
D["PACKAGE_TARNAME"]=" \"wxwidgets\""
D["PACKAGE_VERSION"]=" \"3.1.3\""
D["PACKAGE_STRING"]=" \"wxWidgets 3.1.3\""
D["PACKAGE_BUGREPORT"]=" \"wx-dev@googlegroups.com\""
D["PACKAGE_URL"]=" \"\""
D["__BSD__"]=" 1"
D["__DARWIN__"]=" 1"
D["__UNIX__"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_LANGINFO_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_CXXABI_H"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_WCHAR_T"]=" 4"
D["wxUSE_WCHAR_T"]=" 1"
D["HAVE_VA_COPY"]=" 1"
D["HAVE_VARIADIC_MACROS"]=" 1"
D["_FILE_OFFSET_BITS"]=" 64"
D["HAVE_LARGEFILE_SUPPORT"]=" 1"
D["HAVE_FSEEKO"]=" 1"
D["HAVE_STD_WSTRING"]=" 1"
D["HAVE_STD__ISTREAM"]=" 1"
D["HAVE_STD__OSTREAM"]=" 1"
D["HAVE_TYPE_TRAITS"]=" 1"
D["HAVE_GCC_ATOMIC_BUILTINS"]=" 1"
D["HAVE_COS"]=" 1"
D["HAVE_FLOOR"]=" 1"
D["HAVE_STRTOULL"]=" 1"
D["wxUSE_REGEX"]=" 1"
D["wxUSE_ZLIB"]=" 1"
D["wxUSE_LIBPNG"]=" 1"
D["wxUSE_LIBJPEG"]=" 1"
D["wxUSE_LIBTIFF"]=" 1"
D["wxUSE_EXPAT"]=" 1"
D["wxUSE_XML"]=" 1"
D["wxUSE_OPENGL"]=" 1"
D["wxUSE_GLCANVAS"]=" 1"
D["HAVE_SSIZE_T"]=" 1"
D["wxSIZE_T_IS_ULONG"]=" 1"
D["wxWCHAR_T_IS_REAL_TYPE"]=" 1"
D["HAVE_PW_GECOS"]=" 1"
D["HAVE_WCSLEN"]=" 1"
D["HAVE_WCSLEN"]=" 1"
D["HAVE_WCSFTIME"]=" 1"
D["HAVE_MBSTATE_T"]=" 1"
D["HAVE_WCSRTOMBS"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_VSSCANF"]=" 1"
D["HAVE_VSNPRINTF_DECL"]=" 1"
D["HAVE_SNPRINTF_DECL"]=" 1"
D["HAVE_UNIX98_PRINTF"]=" 1"
D["HAVE_VSSCANF_DECL"]=" 1"
D["HAVE_FPUTWS"]=" 1"
D["HAVE_WPRINTF"]=" 1"
D["HAVE_VSWPRINTF"]=" 1"
D["HAVE_VSWSCANF"]=" 1"
D["HAVE_FSYNC"]=" 1"
D["HAVE_ROUND"]=" 1"
D["HAVE_ICONV"]=" 1"
D["ICONV_CONST"]=" "
D["HAVE_SIGACTION"]=" 1"
D["wxTYPE_SA_HANDLER"]=" int"
D["HAVE_CXA_DEMANGLE"]=" 1"
D["HAVE_MKSTEMP"]=" 1"
D["HAVE_STATFS_DECL"]=" 1"
D["HAVE_STATFS"]=" 1"
D["WX_STATFS_T"]=" struct statfs"
D["HAVE_FCNTL"]=" 1"
D["HAVE_SETENV"]=" 1"
D["HAVE_UNSETENV"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_UNAME"]=" 1"
D["HAVE_STRTOK_R"]=" 1"
D["HAVE_INET_ADDR"]=" 1"
D["HAVE_INET_ADDR"]=" 1"
D["HAVE_INET_ATON"]=" 1"
D["HAVE_INET_ATON"]=" 1"
D["HAVE_FDOPEN"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_GETPWUID_R"]=" 1"
D["HAVE_GETGRGID_R"]=" 1"
D["HAVE_PTHREAD_SETCONCURRENCY"]=" 1"
D["HAVE_PTHREAD_SET_CONCURRENCY"]=" 1"
D["wxHAVE_PTHREAD_CLEANUP"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SCHED_YIELD"]=" 1"
D["HAVE_THREAD_PRIORITY_FUNCTIONS"]=" 1"
D["HAVE_PTHREAD_CANCEL"]=" 1"
D["HAVE_PTHREAD_ATTR_SETSTACKSIZE"]=" 1"
D["HAVE_PTHREAD_MUTEXATTR_T"]=" 1"
D["HAVE_PTHREAD_MUTEXATTR_SETTYPE_DECL"]=" 1"
D["HAVE_LOCALTIME_R"]=" 1"
D["HAVE_GMTIME_R"]=" 1"
D["HAVE_GETHOSTBYNAME"]=" 1"
D["HAVE_GETSERVBYNAME"]=" 1"
D["HAVE_GETSERVBYNAME"]=" 1"
D["wxUSE_COMPILER_TLS"]=" 1"
D["wxUSE_THREADS"]=" 1"
D["WXWIN_COMPATIBILITY_3_0"]=" 1"
D["wxUSE_GUI"]=" 1"
D["wxUSE_UNIX"]=" 1"
D["HAVE_DLOPEN"]=" 1"
D["HAVE_DLOPEN"]=" 1"
D["HAVE_DLERROR"]=" 1"
D["HAVE_DLERROR"]=" 1"
D["HAVE_DLADDR"]=" 1"
D["HAVE_DLADDR"]=" 1"
D["wxUSE_DYNAMIC_LOADER"]=" 1"
D["wxUSE_DYNLIB_CLASS"]=" 1"
D["HAVE_SYS_EVENT_H"]=" 1"
D["wxHAS_KQUEUE"]=" 1"
D["wxUSE_FSWATCHER"]=" 1"
D["wxUSE_SECRETSTORE"]=" 1"
D["wxUSE_ANY"]=" 1"
D["wxUSE_APPLE_IEEE"]=" 1"
D["wxUSE_TIMER"]=" 1"
D["wxUSE_SOUND"]=" 1"
D["wxUSE_CMDLINE_PARSER"]=" 1"
D["wxUSE_STOPWATCH"]=" 1"
D["wxUSE_DATETIME"]=" 1"
D["wxUSE_FILE"]=" 1"
D["wxUSE_FFILE"]=" 1"
D["wxUSE_ARCHIVE_STREAMS"]=" 1"
D["wxUSE_ZIPSTREAM"]=" 1"
D["wxUSE_TARSTREAM"]=" 1"
D["wxUSE_FILE_HISTORY"]=" 1"
D["wxUSE_FILESYSTEM"]=" 1"
D["wxUSE_FS_ARCHIVE"]=" 1"
D["wxUSE_FS_ZIP"]=" 1"
D["wxUSE_FSVOLUME"]=" 1"
D["wxUSE_ON_FATAL_EXCEPTION"]=" 1"
D["wxUSE_STACKWALKER"]=" 1"
D["wxUSE_DEBUGREPORT"]=" 1"
D["wxUSE_SNGLINST_CHECKER"]=" 1"
D["wxUSE_BUSYINFO"]=" 1"
D["wxUSE_HOTKEY"]=" 1"
D["wxUSE_STD_CONTAINERS_COMPATIBLY"]=" 1"
D["wxUSE_STD_IOSTREAM"]=" 1"
D["wxUSE_STD_STRING"]=" 1"
D["wxUSE_UNSAFE_WXSTRING_CONV"]=" 1"
D["wxUSE_STDPATHS"]=" 1"
D["wxUSE_TEXTBUFFER"]=" 1"
D["wxUSE_TEXTFILE"]=" 1"
D["wxUSE_CONFIG"]=" 1"
D["wxUSE_CONFIG_NATIVE"]=" 1"
D["wxUSE_INTL"]=" 1"
D["HAVE_XLOCALE_H"]=" 1"
D["wxUSE_XLOCALE"]=" 1"
D["HAVE_LOCALE_T"]=" 1"
D["wxUSE_LONGLONG"]=" 1"
D["wxUSE_GEOMETRY"]=" 1"
D["wxUSE_BASE64"]=" 1"
D["wxUSE_STREAMS"]=" 1"
D["wxUSE_PRINTF_POS_PARAMS"]=" 1"
D["wxUSE_CONSOLE_EVENTLOOP"]=" 1"
D["wxUSE_SELECT_DISPATCHER"]=" 1"
D["HAVE_GETTIMEOFDAY"]=" 1"
D["WX_TIMEZONE"]=" timezone"
D["HAVE_LOCALTIME"]=" 1"
D["WX_GMTOFF_IN_TM"]=" 1"
D["HAVE_SETPRIORITY"]=" 1"
D["WX_SOCKLEN_T"]=" socklen_t"
D["SOCKOPTLEN_T"]=" socklen_t"
D["wxUSE_SOCKETS"]=" 1"
D["wxUSE_PROTOCOL"]=" 1"
D["wxUSE_PROTOCOL_HTTP"]=" 1"
D["wxUSE_PROTOCOL_FTP"]=" 1"
D["wxUSE_PROTOCOL_FILE"]=" 1"
D["wxUSE_URL"]=" 1"
D["wxUSE_VARIANT"]=" 1"
D["wxUSE_FS_INET"]=" 1"
D["wxUSE_JOYSTICK"]=" 1"
D["wxUSE_FONTENUM"]=" 1"
D["wxUSE_FONTMAP"]=" 1"
D["wxUSE_UNICODE"]=" 1"
D["wxUSE_CONSTRAINTS"]=" 1"
D["wxUSE_MDI"]=" 1"
D["wxUSE_MDI_ARCHITECTURE"]=" 1"
D["wxUSE_DOC_VIEW_ARCHITECTURE"]=" 1"
D["wxUSE_HELP"]=" 1"
D["wxUSE_WXHTML_HELP"]=" 1"
D["wxUSE_PRINTING_ARCHITECTURE"]=" 1"
D["wxUSE_POSTSCRIPT"]=" 1"
D["wxUSE_AFM_FOR_POSTSCRIPT"]=" 1"
D["wxUSE_SVG"]=" 1"
D["wxUSE_METAFILE"]=" 1"
D["wxUSE_IPC"]=" 1"
D["wxUSE_DATAOBJ"]=" 1"
D["wxUSE_CLIPBOARD"]=" 1"
D["wxUSE_DRAG_AND_DROP"]=" 1"
D["wxUSE_SPLINES"]=" 1"
D["wxUSE_MOUSEWHEEL"]=" 1"
D["wxUSE_UIACTIONSIMULATOR"]=" 1"
D["wxUSE_DC_TRANSFORM_MATRIX"]=" 1"
D["wxUSE_MARKUP"]=" 1"
D["wxUSE_ACCEL"]=" 1"
D["wxUSE_ACTIVITYINDICATOR"]=" 1"
D["wxUSE_ADDREMOVECTRL"]=" 1"
D["wxUSE_ANIMATIONCTRL"]=" 1"
D["wxUSE_BANNERWINDOW"]=" 1"
D["wxUSE_BUTTON"]=" 1"
D["wxUSE_BMPBUTTON"]=" 1"
D["wxUSE_CALENDARCTRL"]=" 1"
D["wxUSE_CARET"]=" 1"
D["wxUSE_COLLPANE"]=" 1"
D["wxUSE_COMBOBOX"]=" 1"
D["wxUSE_COMBOCTRL"]=" 1"
D["wxUSE_COMMANDLINKBUTTON"]=" 1"
D["wxUSE_CHOICE"]=" 1"
D["wxUSE_CHOICEBOOK"]=" 1"
D["wxUSE_CHECKBOX"]=" 1"
D["wxUSE_CHECKLISTBOX"]=" 1"
D["wxUSE_COLOURPICKERCTRL"]=" 1"
D["wxUSE_DATEPICKCTRL"]=" 1"
D["wxUSE_DIRPICKERCTRL"]=" 1"
D["wxUSE_FILECTRL"]=" 1"
D["wxUSE_FILEPICKERCTRL"]=" 1"
D["wxUSE_FONTPICKERCTRL"]=" 1"
D["wxUSE_DISPLAY"]=" 1"
D["wxUSE_GAUGE"]=" 1"
D["wxUSE_GRID"]=" 1"
D["wxUSE_HEADERCTRL"]=" 1"
D["wxUSE_HYPERLINKCTRL"]=" 1"
D["wxUSE_BITMAPCOMBOBOX"]=" 1"
D["wxUSE_DATAVIEWCTRL"]=" 1"
D["wxUSE_IMAGLIST"]=" 1"
D["wxUSE_INFOBAR"]=" 1"
D["wxUSE_LISTBOOK"]=" 1"
D["wxUSE_LISTBOX"]=" 1"
D["wxUSE_LISTCTRL"]=" 1"
D["wxUSE_EDITABLELISTBOX"]=" 1"
D["wxUSE_NOTEBOOK"]=" 1"
D["wxUSE_NOTIFICATION_MESSAGE"]=" 1"
D["wxUSE_ODCOMBOBOX"]=" 1"
D["wxUSE_RADIOBOX"]=" 1"
D["wxUSE_RADIOBTN"]=" 1"
D["wxUSE_REARRANGECTRL"]=" 1"
D["wxUSE_RICHMSGDLG"]=" 1"
D["wxUSE_RICHTOOLTIP"]=" 1"
D["wxUSE_SASH"]=" 1"
D["wxUSE_SCROLLBAR"]=" 1"
D["wxUSE_SEARCHCTRL"]=" 1"
D["wxUSE_SLIDER"]=" 1"
D["wxUSE_SPINBTN"]=" 1"
D["wxUSE_SPINCTRL"]=" 1"
D["wxUSE_SPLITTER"]=" 1"
D["wxUSE_STATBMP"]=" 1"
D["wxUSE_STATBOX"]=" 1"
D["wxUSE_STATTEXT"]=" 1"
D["wxUSE_STATLINE"]=" 1"
D["wxUSE_NATIVE_STATUSBAR"]=" 1"
D["wxUSE_STATUSBAR"]=" 1"
D["wxUSE_TEXTCTRL"]=" 1"
D["wxUSE_RICHEDIT"]=" 1"
D["wxUSE_RICHEDIT2"]=" 1"
D["wxUSE_TIMEPICKCTRL"]=" 1"
D["wxUSE_TOGGLEBTN"]=" 1"
D["wxUSE_TOOLBAR"]=" 1"
D["wxUSE_TOOLBAR_NATIVE"]=" 1"
D["wxUSE_TOOLTIPS"]=" 1"
D["wxUSE_TREEBOOK"]=" 1"
D["wxUSE_TOOLBOOK"]=" 1"
D["wxUSE_TREECTRL"]=" 1"
D["wxUSE_TREELISTCTRL"]=" 1"
D["wxUSE_POPUPWIN"]=" 1"
D["wxUSE_PREFERENCES_EDITOR"]=" 1"
D["wxUSE_PRIVATE_FONTS"]=" 1"
D["wxUSE_TIPWINDOW"]=" 1"
D["wxUSE_CONTROLS"]=" 1"
D["wxUSE_ARTPROVIDER_STD"]=" 1"
D["wxUSE_ARTPROVIDER_TANGO"]=" 1"
D["wxUSE_DRAGIMAGE"]=" 1"
D["wxUSE_EXCEPTIONS"]=" 1"
D["wxUSE_HTML"]=" 1"
D["wxUSE_WEBKIT"]=" 1"
D["wxUSE_XRC"]=" 1"
D["wxUSE_AUI"]=" 1"
D["wxUSE_PROPGRID"]=" 1"
D["wxUSE_RIBBON"]=" 1"
D["wxUSE_STC"]=" 1"
D["wxUSE_MENUS"]=" 1"
D["wxUSE_MIMETYPE"]=" 1"
D["wxUSE_MINIFRAME"]=" 1"
D["wxUSE_SYSTEM_OPTIONS"]=" 1"
D["wxUSE_TASKBARICON"]=" 1"
D["wxUSE_TASKBARICON_BALLOONS"]=" 1"
D["wxUSE_VALIDATORS"]=" 1"
D["wxUSE_PALETTE"]=" 1"
D["wxUSE_RICHTEXT"]=" 1"
D["wxUSE_WEBVIEW_WEBKIT"]=" 1"
D["wxUSE_WEBVIEW"]=" 1"
D["wxUSE_IMAGE"]=" 1"
D["wxUSE_GIF"]=" 1"
D["wxUSE_PCX"]=" 1"
D["wxUSE_TGA"]=" 1"
D["wxUSE_IFF"]=" 1"
D["wxUSE_PNM"]=" 1"
D["wxUSE_XPM"]=" 1"
D["wxUSE_ICO_CUR"]=" 1"
D["wxUSE_ABOUTDLG"]=" 1"
D["wxUSE_CHOICEDLG"]=" 1"
D["wxUSE_COLOURDLG"]=" 1"
D["wxUSE_FILEDLG"]=" 1"
D["wxUSE_FINDREPLDLG"]=" 1"
D["wxUSE_FONTDLG"]=" 1"
D["wxUSE_DIRDLG"]=" 1"
D["wxUSE_MSGDLG"]=" 1"
D["wxUSE_NUMBERDLG"]=" 1"
D["wxUSE_PROGRESSDLG"]=" 1"
D["wxUSE_NATIVE_PROGRESSDLG"]=" 1"
D["wxUSE_SPLASH"]=" 1"
D["wxUSE_STARTUP_TIPS"]=" 1"
D["wxUSE_TEXTDLG"]=" 1"
D["wxUSE_WIZARDDLG"]=" 1"
D["wxUSE_GRAPHICS_CONTEXT"]=" 1"
D["wxUSE_MEDIACTRL"]=" 1"
D["wxINSTALL_PREFIX"]=" \"/usr/local\""
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "rcdefs.h":C)
            mkdir -p $outdir &&
            $CPP $infile | sed 's/^# *[1-9].*//;s/^ *//;/./,/^$/!d' > $outdir/rcdefs.h
         ;;
    "lib/wx/config/${TOOLCHAIN_FULLNAME}":F)  chmod +x lib/wx/config/${TOOLCHAIN_FULLNAME}  ;;
    "lib/wx/config/inplace-${TOOLCHAIN_FULLNAME}":F)  chmod +x lib/wx/config/inplace-${TOOLCHAIN_FULLNAME}  ;;
    "utils/ifacecheck/rungccxml.sh":F)  chmod +x utils/ifacecheck/rungccxml.sh  ;;
    "wx-config":C)  rm -f wx-config
                     ${LN_S} lib/wx/config/inplace-${TOOLCHAIN_FULLNAME} wx-config
                    ;;

  esac
done # for ac_tag


as_fn_exit 0
